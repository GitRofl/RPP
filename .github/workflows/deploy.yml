name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        id: run-tests # Добавляем ID для доступа к результату этой команды
        run: python -m unittest discover -s . -p "test_main.py"

      - name: Lint code
        run: flake8 .

      - name: Check test coverage
        run: coverage run -m unittest discover -s . -p "test_main.py" && coverage report

      - name: Security checks
        run: bandit -r .
    continue-on-error: false # Останавливаем выполнение при ошибке тестов

  notify:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Send Telegram notification
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          # Проверяем результат работы задачи `test`
          if [ "${{ needs.test.result }}" == "success" ]; then
            MESSAGE="✅ Тесты прошли успешно. Отличная работа!"
          else
            MESSAGE="❌ Тесты не прошли. Исправьте ошибки!"
          fi
          echo "Message to send: $MESSAGE"
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
            -d chat_id=${CHAT_ID} \
            -d text="${MESSAGE}"
